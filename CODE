// Area of interest
var areaOfInterest =
    ee.Geometry.Polygon(
        [[[16.278247539412213, 59.84820707394825],
          [16.363563243757916, 59.84820707394825],
          [16.363563243757916, 59.88922451187625],
          [16.278247539412213, 59.88922451187625]]]);
// Zoom to area of interest
Map.centerObject(areaOfInterest);
Map.addLayer(areaOfInterest);
// Load Sentinel-2 data
var startDate = '2018-07-01';
var endDate = '2018-07-31';
// Returns all the images between the start date and the end date
// taken on the area of interest
var sentinelImageCollection = ee.ImageCollection('COPERNICUS/S2')
                  .filterBounds(areaOfInterest)
                  .filterDate(startDate, endDate);
print("Number of images = ", sentinelImageCollection.size());
// We select the image with the smallest cloudy pixel percentage
var sentinelImage = 
    sentinelImageCollection.sort('CLOUDY_PIXEL_PERCENTAGE')
    .first()
    .clip(areaOfInterest);
print("Sentinel image taken at = ", sentinelImage.date());
// Visualize using RGB
Map.addLayer(
    sentinelImage,
    {min: 0.0, max: 2000, bands: ['B4', 'B3', 'B2']},
    'RGB');
    var ndwi =
    sentinelImage.normalizedDifference(['B3', 'B8']).rename('NDWI');
Map.addLayer(
    ndwi,
    {palette: ['red', 'yellow', 'green', 'cyan', 'blue']},
    'NDWI');
    // Create NDWI mask
var ndwiThreshold = ndwi.gte(0.0);
var ndwiMask = ndwiThreshold.updateMask(ndwiThreshold);
Map.addLayer(
    ndwiThreshold,
    {palette:['black', 'white']},
    'NDWI Binary Mask');
Map.addLayer(ndwiMask, {palette:['blue']}, 'NDWI Mask');
// Export the image, specifying the CRS, transform, and region.
Export.image.toDrive({
  image: ndwiThreshold.visualize({min:0, max:1}),
  description: 'NDWI binary mask',
  crs: 'EPSG:4326',
  scale: 10,
  region: areaOfInterest
});
// We can now calculate the masked areas pixel area
var ndwiPixelArea =
    ee.Image.pixelArea().addBands(
        ndwiMask.select('NDWI')).divide(1e6).reduceRegion({
            reducer: ee.Reducer.sum().group(1),
            geometry: areaOfInterest,
            scale: 10,
            bestEffort: true
});

var list = ee.List(ee.Dictionary(ndwiPixelArea).get('groups'));
var group0 = ee.Dictionary(list.get(0));
var ndwiWaterArea = ee.Number(group0.get('sum')).float();

print("Water area (km2):", ndwiWaterArea);

